索引：是MySQL中的数据。
其实MySQL中的技术，为某些字段创建了索引之后，当根据这些字段进行where或者order by进行查询的时候速度非常快。索引是性价比最高的数据库优化手段。
普通索引：key xxx(xxx) 加快查询速度
唯一索引：unique xxx(xxx) 加快查询速度，表中这个字段的值不能重复。
主键索引：primary key(id)  只能有一个字段。
全文索引：对大文本字段创建索引。【char,varchar,text,longtext等】
MySQL中全文索引对中文支持的不好，所以不怎么用。

应该为那些字段建索引：
以后会根据那个字段查询或排序就为那个字段创建索引。

【char,varchar,text,longtext】一般使用全文索引引擎，有两个非常有名，①Lucence  ②Sphinx
Lucence  更复杂和专业，java
Sphinx   简单好用
全文索引会中文分词。但MySQL中的like是不会对中文分词。

因为大文本不适合建索引，但是有这个需求，但是MySQL支持前缀索引。
如：key username(username(3))   位字符串的前三个字符，utf8
SELECT * FROM member WHere username LIKE '张%';

联合索引：我们可以为多个字段创建一个索引，比如 : key xxx(member_id,cat_id)

单独：单独根据每个字段查询是会使用索引，
联合索引：根据前几个连续（必须从第一个开始）字段查询的时候才会用上索引。

联合索引比单独建索引要快。
SELECT COUNT(*) FROM xxx WHERE member_id = xxx AND cat_id = XXX;(联合索引)
SELECT COUNT(*) FROM xxx WHERE cat_id = XXX;（单独索引）

注意：如果用OR 连接多个条件，不管有没有建索引就不会用到索引。

如何分析一条SQL 语句呢？
MySQL中提供了desc 或者 explain用来分析一个sql语句的执行流程。
语法： desc  SQL语句 \G
查看一个表中的索引
show index from xxx

结果中比较重要的字段。
possible_keys  有可能有用的索引。【优化器】
key 实际使用的索引。
row 扫描的行数。

用这个语句分析出实际上or什么索引也没用，所以or是最慢的类型。

SQL优化：同一个功能有多种SQL的写法，怎么写性能最好【能利用上索引】
如：select * from abc where a = 100 or b = 300 \G                【全表扫描】
可以改为：把这个写成两条SQL语句，再合并结果
(select U from abc where a=100) union (select * from abc where b=300) \G

注意我们写程序的时候可以建索引，此外当项目开发好了之后我们可以打开MySQL中的慢日志，慢日志中会记录下所有执行速度慢的SQL 语句【我们可以设置一个值(可以是1s)，当SQL语句执行时间超过这个时间就认为是慢的】
先让网站上线，网站运行一周之后，打开慢日志查看所有慢的SQL语句，进行SQL优化。

加索引语法：ALTER TABLE blog add index xxx(xxx);

联表查询的优化：因为这个SQL语句比较长我们可以desc打印出来查看，或者我们可以先执行最基本的打印出来，在慢慢增加方法。

有时候联合查询会比较慢。
方法①：先取出一个，再循环。【页面执行的SQL语句会比较多】
方法②：做做冗余，在另一个表中加入一个你想要字段的值，那么就只查一个表了。
但是如果修改的的话那么就要更新了。【数据量大的时候就是这样做了】。
③就是做缓存。
后台每隔一段时间就执行一个脚本，把联表的数据存入一张表中，把表中的数据存入缓存中，然后前台就只读这一张表就可以了。【大网站】第一次运行的时候也不会慢，因为后台运行脚本之前，就把记录放到脚本中了。所以如果在大公司那么PHP就是前端的了(比如百度、淘宝),先对于Java来说。java是一个大后端。淘宝京东最底层是java，java生成完之后提交到缓存中，PHP直接读取缓存中的数据。因为PHP处理底层比java慢。PHP只负责展示数据。


搜索中涉及到的查询要用全文索引。sphinx【俄罗斯】：为大文本创建全文索引，创建索引的同时进行分词。可以快速的搜索文本，只支持俄文和英文，但是它提供了一个接口，可以支持各种语言，只要有语言包就可以了。国内的团队在sphinx的基础上添加了中文语言包更改为coreseek。
使用流程：
①下载,放到没有中文的路径下。
②创建配置文件【etc中有模板复制一份，改一下】
③使用bin/index.exe命令创建索引文件【搜索那个表的那个字段就建索引】
④启动sphinx服务器，运行bin/searchd.exe
⑤使用PHP程序搜索。
	a)先连接sphinx服务器，搜索“到黑龙江学习PHP”
	b)分词
	c)sphinx服务器会返回数据库中带有分词的文章的id
	d)根据id到MySQL数据库中查询出详细的信息。

②定义配置文件：
定义数据源:主查询：想为那些数据建索引。如果表中主键不叫id那么要起别名。
一个配置文件可以定义多个数据源。
定义索引文件：



注意当自己的索引弄好了之后我们要查看启动服务的端口号是否和你配置文件中的端口号一样否则不能执行。




