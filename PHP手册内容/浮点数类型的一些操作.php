<?php
//说明：十进制可以精确表示有理数如0.1或0.7,无论有多少为数都不能被内部所使用的二进制精确表示，因此不能在丢失一点点精度的情况下装换为二进制的格式。这会造成混乱的结果：例如，floor(0.1+0.7)*10,(int)((0.1+0.7)*10),通常返回7而不是预期中的8，因为该结果内部的表示其实是类似7.99999，所以不要相信浮点数结果精确到了最后一位，也不要比较两个浮点数是否相等。如果确实需要更高精度，应该使用任意精度数学函数或者gmp函数。说白了，浮点数转化为二进制会造成精度丢失的现象。
//问题：如何进行比较浮点数的大小？
//答：使用任意精度的数学函数（BC数学函数）
bcadd //2个任意精度数字的加法计算
bccomp //比较两个任意精度的数字
bcdiv //2个任意进度的数字除法计算
bcmod //对一个任意进度数字取模
bcpowmod//增加一个bcmod操作
bcmul //2个任意进度数字乘法计算
bcpow //任意精度数字的乘方 
bcscale //设置所有bc数学函数的默认小数点保留位数
bcsqrt //任意精度数字的二次方根
bcsub //2个任意进度数字的减法